(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{176:function(e,t,n){"use strict";n.r(t);var a=n(0),i=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),n("p",[n("a",{attrs:{href:"https://vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("More details on how it works in their (really awesome) documentation"),n("OutboundLink")],1)]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),n("p",[e._v("For exemple, when we type information in an input, the event handling is asynchronous. It's the same when users click a button.")]),e._v(" "),n("p",[e._v("This way the team have created a project called "),n("a",{attrs:{href:"https://github.com/angular/zone.js/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("zone.js")]),n("OutboundLink")],1),e._v(" that rewrites every asynchronous handler of the browser\n(monkey-patching) to know "),n("strong",[e._v("when")]),e._v(" it has to trigger rendering cycle.")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("Change detection cycles are managed explicitly on React. We have to tell the framework that we want to change some data before it actually changes.")]),e._v(" "),e._m(11)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"change-detection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#change-detection","aria-hidden":"true"}},[this._v("#")]),this._v(" Change detection")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("We now have our "),t("code",[this._v("template engine")]),this._v(" and our "),t("code",[this._v("state")]),this._v(". The problem is that they are completely unbound.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("We need a way to "),t("em",[this._v("react")]),this._v(" on user inputs and to make the state change appears on the browser.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("What we want is commonly called "),t("code",[this._v("change detection")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It's simply a way to tell the framework "),t("strong",[this._v("Hey! Re-display information, they have changed!")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"change-detection-in-vuejs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#change-detection-in-vuejs","aria-hidden":"true"}},[this._v("#")]),this._v(" Change detection in Vuejs")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Change detection in Vuejs is managed using "),t("code",[this._v("observables")]),this._v(". Every property created inside the "),t("code",[this._v("data")]),this._v(" function is\nbound to an "),t("code",[this._v("observable")]),this._v(". Each time this value is modified, it's observed and can be handled by the virtual dom accordingly.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"change-detection-in-angular"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#change-detection-in-angular","aria-hidden":"true"}},[this._v("#")]),this._v(" Change detection in Angular")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Angular has adopted another approach. They started from this assumptions: any modification of the state is applied\nthanks to "),t("code",[this._v("asynchronous")]),this._v(" handling.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The behavior acts from top to bottom on the tree component: it means that "),t("strong",[this._v("each component is visited and knows if it has to rerender or not")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"change-detection-in-react"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#change-detection-in-react","aria-hidden":"true"}},[this._v("#")]),this._v(" Change detection in React")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The idea is simple, each time "),t("code",[this._v("setState")]),this._v(" is called, "),t("code",[this._v("React")]),this._v(" created a new VDOM of a component with the new state. Then the current and the new VDOM are compared and\n"),t("strong",[this._v("differences (if there are?)")]),this._v(" are concretely applied to the DOM.")])}],!1,null,null,null);i.options.__file="change-detection.md";t.default=i.exports}}]);